x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},\d{3}) (?P<message>(?s:.*))$$'

services:
  nginx:
      container_name: nginx
      restart: unless-stopped
      image: nginx
      ports:
          - "80:80"
          - "443:443"
      volumes:
          - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./certbot/conf:/etc/letsencrypt
          - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN} --agree-tos

  mlflow:
    build: mlflow
    ports:
      - "5000:5000"
    env_file:
      - .env
    command: mlflow server --host 0.0.0.0 -p 5000 --backend-store-uri "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}" --default-artifact-root "${S3_BUCKET_URI}"

  loki:
    image: grafana/loki:3.5.1
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
      - loki
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - APP_NAME=backend
    logging: *default-logging

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
#    ports:
#      - "8501:8501"
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus:v3.3.1
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.7.2
    command: [ "-config.file=/etc/tempo.yml", "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./etc/tempo/tempo.yml:/etc/tempo.yml
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:12.0.0
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    logging: *default-logging
